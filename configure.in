AC_INIT(src/red-carpet.in)

MAJOR_VERSION=2
MINOR_VERSION=2
MICRO_VERSION=2
VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION

AM_INIT_AUTOMAKE(red-carpet, $VERSION)

AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(MICRO_VERSION)

AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION)
AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION)
AC_DEFINE_UNQUOTED(MICRO_VERSION, $MICRO_VERSION)

AM_MAINTAINER_MODE

AM_PROG_LIBTOOL

dnl **************************************************************************

dnl Check for Python 2.2

AM_PATH_PYTHON(2.2)
AM_CHECK_PYTHON_HEADERS(,[AC_MSG_ERROR(could not find Python headers)])

dnl **************************************************************************

dnl Check for existance of Gordon Installer

AC_ARG_ENABLE(standalone,
	[   --enable-standalone       use standalone build],
	use_standalone="yes", use_standalone="no")

AC_MSG_CHECKING(whether to build a standalone binary)
AC_MSG_RESULT($use_standalone)

AM_CONDITIONAL(STANDALONE, test "x$use_standalone" = "xyes")

dnl Fast Unmarshaller Checks

AC_ARG_ENABLE(unmarshaller,
        [   --disable-unmarshaller    does not build the fast unmarshaller], 
        use_fast_unmarshaller="disabled", use_fast_unmarshaller="yes") 

dnl Check for python distutils --- we need them to build the fast
dnl unmarshaller.  They should be distributed along w/ python 2.x, but
dnl some distros might break them out into a separate package.
                 
distutils_check="
import sys
from distutils.core import setup, Extension
sys.exit(0)"
 
AC_MSG_CHECKING(for python distutils)
have_distutils="no"
if $PYTHON -c "$distutils_check" 1>&AC_FD_CC 2>&AC_FD_CC; then
   have_distutils="yes"
fi
AC_MSG_RESULT($have_distutils)

if test "x$have_distutils" = "xno"; then
   use_fast_unmarshaller="requires distutils"
fi

AM_CONDITIONAL(FAST_UNMARSHALLER, test "x$use_fast_unmarshaller" = "xyes")

AC_MSG_CHECKING(for fast unmarshaller support)
AC_MSG_RESULT($use_fast_unmarshaller)

dnl **************************************************************************

dnl This is stuff for building our pygtk extensions that are written in C

PKG_CHECK_MODULES(GTK, gtk+-2.0)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

PKG_CHECK_MODULES(PYGTK, pygtk-2.0 >= 2.0.0)
AC_SUBST(PYGTK_CFLAGS)

PYGTK_PREFIX=`$PKG_CONFIG --variable=prefix pygtk-2.0`	
AC_SUBST(PYGTK_PREFIX)

AC_MSG_CHECKING(for pygtk defs)
PYGTK_DEFSDIR=`$PKG_CONFIG --variable=defsdir pygtk-2.0`
AC_SUBST(PYGTK_DEFSDIR)
AC_MSG_RESULT($PYGTK_DEFSDIR)

dnl FIXME: check that pygtk-codegen-2.0 actually exists!
PYGTK_CODEGEN=$PYGTK_PREFIX/bin/pygtk-codegen-2.0
AC_SUBST(PYGTK_CODEGEN)

PYGTK_IMPORTDIR=$PYGTK_PREFIX/lib/python$PYTHON_VERSION/site-packages
AC_SUBST(PYGTK_IMPORTDIR)

dnl **************************************************************************

dnl Look for scrollkeeper
AC_PATH_PROG(have_scrollkeeper_config, scrollkeeper-config, no)
if test x$have_scrollkeeper_config = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config.  Please install the scrollkeeper package: http://scrollkeeper.sf.net)
fi

dnl Look for xsltproc
AC_PATH_PROG(have_xsltproc, xsltproc, no)
if test x$have_xsltproc = xno; then
  AC_MSG_ERROR(Couldn't find xsltproc.  This is usually in the libxslt package)
fi

AC_SUBST(PYTHON)

GETTEXT_PACKAGE=red-carpet
AC_SUBST(GETTEXT_PACKAGE)
ALL_LINGUAS="az ca cs da de el es et eu fr hr hu it ml nl no pl pt pt_BR ru sk sq sr sr@Latn sv tr uk zh_CN"
AM_GLIB_GNU_GETTEXT

DDIR=`echo $datadir | sed -e "s,"'${prefix}'",$prefix,"`
AC_SUBST(DDIR)
LDIR=`echo $libdir | sed -e "s,"'${exec_prefix}'",$prefix,"`
AC_SUBST(LDIR)

AC_ARG_WITH(usermode-type,
  [  --with-usermode-type=TYPE (redhat7, redhat8)],
  with_usermode_type="$withval",
  with_usermode_type="none")

AM_CONDITIONAL(USERMODE, false)
AM_CONDITIONAL(USERMODE_REDHAT7, false)
AM_CONDITIONAL(USERMODE_REDHAT8, false)

if test "x$with_usermode_type" = "xredhat7"; then
  AM_CONDITIONAL(USERMODE, true)
  AM_CONDITIONAL(USERMODE_REDHAT7, true)
elif test "x$with_usermode_type" = "xredhat8"; then
  AM_CONDITIONAL(USERMODE, true)
  AM_CONDITIONAL(USERMODE_REDHAT8, true)
fi

AC_OUTPUT([
Makefile
po/Makefile.in
help/Makefile
help/docbook/Makefile
help/docbook/common/Makefile
help/docbook/html/Makefile
help/docbook/images/Makefile
help/docbook/lib/Makefile
help/C/Makefile
art/Makefile
ximian_unmarshaller/Makefile
red_extra/Makefile
src/Makefile
src/red-carpet
red-carpet.console
])

echo "

Configuration:

  Source code location: ${srcdir}
  Prefix:               ${prefix}
  
  Usermode type:        ${with_usermode_type}
  Standalone binary:    ${use_standalone}
  Fast unmarshaller:    ${use_fast_unmarshaller}

"
