AC_INIT(src/red-carpet.in)

MAJOR_VERSION=0
MINOR_VERSION=0
MICRO_VERSION=1
VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION

AM_INIT_AUTOMAKE(red-carpet, $VERSION)

AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(MICRO_VERSION)

AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION)
AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION)
AC_DEFINE_UNQUOTED(MICRO_VERSION, $MICRO_VERSION)

AM_MAINTAINER_MODE

AC_PROG_LIBTOOL

dnl **************************************************************************

dnl Find Python 2.2

py_version="2.2"
py_ver_check="
import sys, string
required_version = map(int, string.split(\"$py_version\",\".\"))
version = map(int, string.split(string.split(sys.version)[[0]], \".\"))
sys.exit(version < required_version)"

AC_MSG_CHECKING(for python >= $py_version)

for cmd in "python" "python2"; do
    PYTHON=`which $cmd`
    if test x$PYTHON \!= x; then
        if $PYTHON -c "$py_ver_check" 1>&AC_FD_CC 2>&AC_FD_CC; then
	   found_py=yes
	   break
	fi
    fi
done

if test x$found_py != xyes; then
   	AC_MSG_ERROR(Couldn't find the right version of python in the path)
fi

AC_MSG_RESULT(found at $PYTHON)

dnl Make sure we have the right gtk+ bindings

py_gtk_version="2.0.0"
py_gtk_version_check="
import sys, string, gtk
required_version = map(int, string.split(\"$py_gtk_version\",\".\"))
version = gtk.gtk_version
sys.exit(version < required_version)"

AC_MSG_CHECKING(for python gtk+ $py_gtk_version)
if $PYTHON -c "$py_gtk_version_check" 1>&AC_FD_CC 2>&AC_FD_CC; then
   AC_MSG_RESULT(found)
else
   AC_MSG_RESULT(not found)
   AC_MSG_ERROR(Python gtk+ version $py_gtk_version or better is required)
fi

dnl **************************************************************************

dnl This is stuff for building our pygtk extensions that are written in C

dnl We'll hard-wire this for now.
PYTHON_INCLUDES=-I/usr/include/python2.2
AC_SUBST(PYTHON_INCLUDES)

PKG_CHECK_MODULES(GTK, gtk+-2.0)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

PKG_CHECK_MODULES(PYGTK, pygtk-2.0)
AC_SUBST(PYGTK_CFLAGS)

PYGTK_PREFIX=`$PKG_CONFIG --variable=prefix pygtk-2.0`	
AC_SUBST(PYGTK_PREFIX)

AC_MSG_CHECKING(for pygtk defs)
PYGTK_DEFSDIR=`$PKG_CONFIG --variable=defsdir pygtk-2.0`
AC_SUBST(PYGTK_DEFSDIR)
AC_MSG_RESULT($PYGTK_DEFSDIR)

dnl FIXME: check that pygtk-codegen-2.0 actually exists!
PYGTK_CODEGEN=$PYGTK_PREFIX/bin/pygtk-codegen-2.0
AC_SUBST(PYGTK_CODEGEN)

dnl **************************************************************************

AC_SUBST(PYTHON)

DDIR=`echo $datadir | sed -e "s,"'${prefix}'",$prefix,"`
AC_SUBST(DDIR)

AC_OUTPUT([
Makefile
red_extra/Makefile
src/Makefile
src/red-carpet
])
