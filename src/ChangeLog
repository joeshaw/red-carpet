2003-03-05  Tambet Ingo  <tambet@ximian.com>

	* Makefile.am (red_carpetsupport_DATA): Added red_connection.py.

	* red_main.py (main): Fixed server/local command line argument parsing.

	* rcd_util.py (md5ify_password): Use red_connection.

	* red_connection.py: New file. Home of connecting to server and saving/
	loading of credentials.

	* red_depcomponent.py (DepComponent.finished_cb): Save temporary
	variable to let history view know it should update itself.

	* red_history.py: Remove unused global model.
	(HistoryComponent.activated): Check if we have to update. Fixes #38920.

2003-03-04  Jose Mercado  <jose@ximian.com>

	* rcd_util.py (StartDaemon): Use /etc/init.d/rcd, which will
	work on all LSB compliant distros.
	(connect_to_server): Get rid of /sbin/services here too.	

	* red_main.py (main): Fixed typo.

2003-03-04  Jon Trowbridge  <trow@ximian.com>
	
	* red_search.py (SearchComponent.select_all): If a package is
	already installed, don't mark it as TO_BE_INSTALLED.

	* red_summary.py (SummaryComponent.select_all): If a package
	is already installed, don't mark it as TO_BE_INSTALLED.

2003-03-04  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView.set_label): Make sure label has
	at least 3 lines to avoid "jumpyness".
	(PendingView.__init__): Don't set height, it won't grow
	otherwise. Fixes part of #39001.

	* rcd_util.py (linebreak): Handle cases where string has "words" longer
	than "width" argument.

2003-03-03  Frank Belew  <frb@ximian.com>

	* red_pendingview.py (PendingView.calculate_required_text_size): 
	remove length argument on call to pango.Layout.set_text()

2003-03-03  Jon Trowbridge  <trow@ximian.com>

	* red_searchbox.py (SearchBox.get_filter): When filtering out
	unsubscribed channels, don't filter system packages.

	* red_pendingview.py (PendingView_Transaction.update_pending_cb):
	If an error occured, do a slightly better job of formatting the
	error message and set the window title to "Update Failed". (This
	is part of #39001)

2003-02-28  Jon Trowbridge  <trow@ximian.com>

	* red_channeloption.py (ChannelOption.__assemble): Put the
	subscription icon in option menu entries that correspond to
	subscribed channels. (Fixes #38899)

	* red_appwindow.py (AppWindow.assemble_menubar): Changed
	Edit->Subscriptions to Edit->Channel Subscriptions to be more
	consistent with the language in the toolbar (and hopefully clearer
	too).  Added the subscription icon to the menu item.

2003-02-28  Tambet Ingo  <tambet@ximian.com>

	* red_searchbox.py (SearchBox.__assemble): Added spacing for entry_row.

2003-02-28  Jon Trowbridge  <trow@ximian.com>

	* red_thrashingtreeview.py (TreeView.post_thrash_model): Always
	autosize the treeview's columns after we thrash.  This helps keeps
	us from ending up with badly sized, unresizable columns.

2003-02-28  Tambet Ingo  <tambet@ximian.com>

	* red_history.py: Uses red_listmodel and red_thrashingview for model
	and view. Sorts by time by defaults.

	* red_thrashingtreeview.py (TreeView.add_column): Moved it here from
	red_packageview. Sorting is now done by column id, not column object.
	Changed all files to reflect that.

	* red_listmodel.py: Moved sorting here from red_packagearray. Moved
	message pushing/pooping and busy signal handling here from
	red_packagearray. Changed all files to reflect that.

2003-02-28  Jon Trowbridge  <trow@ximian.com>

	* red_depcomponent.py (DepComponent.build_verified_ok_page): Make
	the "yes, your system is valid" page prettier.

	* red_searchbox.py (_ShowAdvanced): Store the state of
	'view->advanced search options' in the config.

	* red_summary.py (SummaryComponent.build): Added a "the system
	is up-to-date" page that gets displayed if there are no updates.

	* red_packagearray.py (PackagesFromDaemon.schedule_refresh): Track
	the id of the idle handler.
	(PackagesFromQuery.set_query): Explicitly disconnect any existing
	query when we start a new query. (fixes part of #33839)

	* Makefile.am (red_carpetsupport_DATA): Removed unused files.

	* red_searchbox.py: Removed unneeded imports.

	* red_search.py: Removed unneeded imports.

	* red_searchbar.py: Removed.

	* red_sectionoption.py: Removed.

	* red_statusoption.py: Removed.

	* red_depcomponent.py (DepComponent.begin_transaction): A hack.
	We hold a reference to our PendingView_Transaction window in
	order to work around pygtk bug 92955 (a refcounting glitch).

	* red_sidebar.py (SideBar.update_label): Again, "pending
	operations" instead of "pending actions"

	* red_transaction.py (TransactionComponent.name): Changed "Pending
	Transactions" to "Pending Operations".
	(TransactionComponent.long_name): Ditto.
	(ok_to_quit): To be consistent, we call them "pending operations"
	here instead of "pending actions".

	* red_sidebar.py (SideBar.build): Changed "Pending Transactions"
	to "Pending Operations".

	* red_packageview.py (PackageView.append_status_column): If we
	aren't displaying the status name, center the icon.
	(PackageView.activated_cb): If we aren't displaying the action
	name, center the icon.
	(PackageView.append_channel_column): If we aren't displaying the
	channel name, center the icon.

2003-02-27  Tambet Ingo  <tambet@ximian.com>

	* red_packagearray.py (sort_pkgs_by_action): Fixed an embarassing
	typo which crashed rc on sorting by "action".

2003-02-27  Joe Shaw  <joe@ximian.com>

	* red_settings.py (DaemonSettings.build): Make enter in the
	entries activate the default, and make it not activate the
	drop-down box in the combo.

2003-02-27  Jon Trowbridge  <trow@ximian.com>

	* red_search.py (SearchComponent.activated): Have the SearchBox
	try to grab focus when the component is activated...
	(SearchComponent.build): ...as well as when it is constructed.

	* red_searchbox.py (SearchBox.try_to_grab_focus): Pick an
	appropriate search-related widget and have it grab the focus.

	* red_appwindow.py (AppWindow.assemble_toolbar): Add a
	"refresh" item to the toolbar. (Fixes #38705)

	* red_prefs.py (PrefsView.editing_done_cb): Don't set the
	preference if we didn't actually change it. (Fixes #38834)

	* red_packagearray.py (pkg_status): "not installed" is better
	than "uninstalled".

	* red_appwindow.py (AppWindow.assemble_menubar): Added menu
	option View->Advanced Search Options.

	* red_channeloption.py: Added symbolic names for magic channel
	IDs.
	(ChannelOption.__init__): Added 'any subd channel' option.
	(ChannelOption.__assemble): Support 'any subd channel'.
	(ChannelOption.get_channel_id): Work properly when one of our
	magic channels (i.e. "any channel", etc.) is selected.

	* red_search.py (SearchComponent.build): Hacked to use the
	new SearchBox widget.

	* red_searchbox.py: Added.  A revised widget for controlling
	searches.

	* red_console.py (Console.write): Queue up any messages and write
	them to the console window in a timeout.  This avoids gtk locking
	problems if another thread writes to stderr.

2003-02-26  Jon Trowbridge  <trow@ximian.com>

	* red_pendingview.py (PendingView_Transaction.finished): Thaw the
	serverlistener polling when we are finished, not when we cancel.
	(PendingView_Transaction.transaction_finished): Don't thaw the
	polling yet.

2003-02-26  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView.delete_event_cb): Connect this
	function to "delete_event" signal of the dialog. Basically, dialog's
	"delete_event" == button's "clicked".

2003-02-26  Jon Trowbridge  <trow@ximian.com>

	* red_pendingview.py (PendingView_Transaction.cancelled): Chain
	to PendingView's cancelled function.
	(PendingView_Transaction.finished): Thaw the serverlistener
	polling when we are finished, not when we cancel.
	(PendingView_Transaction.transaction_finished): Don't thaw the
	polling yet.

	* red_appwindow.py (AppWindow.assemble_toolbar): Renamed the
	"Subscriptions" button to "Channels" and changed the tooltip.

	* Makefile.am (red_carpetsupport_DATA): Removed red_system.py from
	the list, since it doesn't exist anymore.

2003-02-25  Tambet Ingo  <tambet@ximian.com>

	* red_search.py (SearchComponent.activated): Add. Activate search entry
	every time the SearchComponent is activated.

	* red_searchbar.py (SearchBar.get_search_entry): Add.

	* red_pendingview.py (PendingView.__init__): Give default focus to
	Ok/Cancel button.

2003-02-25  Joe Shaw  <joe@ximian.com>

	* rcd_util.py: Get rid of the mono icon hack.

	* red_console.py, red_depcomponent.py, red_packageview.py: Change
	the names of some images.

2003-02-25  Joe Shaw  <joe@ximian.com>

	* rcd_util.py (StartDaemon): Remove some debugging output.

2003-02-25  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView_Transaction.update_pending_cb):
	Don't just mindlessly pulse every time, it makes things too flashy.
	Pulse only on unhandled step_pendings.

	* rcd_util.py (check_rcd_version): When I said 'n' I meant '\n'.

2003-02-25  Joe Shaw  <joe@ximian.com>

	* red_main.py (main): Always save our local flag, so -l works
	correctly.

2003-02-25  Joe Shaw  <joe@ximian.com>

	* rcd_util.py (check_rcd_version_: Require rcd 1.2.1.

	* red_main.py: Add argument parsing.  Get host info from
	arguments.

	* red_packagearray.py (pkg_status): Mark these for translation.

	* red_settings.py (get, get_private): Return "" instead of None if
	the option isn't in the file, so we don't try to load/save None
	values.
	(url_set): Always remove the url from the list if we match and
	insert at 0, so the most recently used are always at the head.

	* red_subscriptions.py: Mark "Sub'd" for translaction.

	* ximian_xmlrpclib.py: Don't use the rcd_util.hexstr() functions,
	use them directly out of the md5 module (since we're using Python
	2.2).

2003-02-25  Jon Trowbridge  <trow@ximian.com>

	* red_pendingview.py: Tweak the window sizing/line wrapping
	parameters a bit.
	(PendingView_Transaction.download_pending_cb): If our download
	failed, print the associated error message in the dialog and set
	the __finished flag.

2003-02-25  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView.calculate_required_text_size):
	Calculate height also, renamved from (calculate_required_width).
	(PendingView.__init__): Set required size to label, not to whole
	dialog.
	(PendingView_Transaction.update_pending_cb): If we're already finished,
	we don't want to update anything anymore. Caused lots'n'lots
	Gdk-CRITICAL warnings (progressbar pulse).

2003-02-25  Jon Trowbridge  <trow@ximian.com>

	* red_gettext.py: Don't import red_main.  Instead of using the
	global debug env, check RC_GUI_TRANSLATION_DEBUG.

2003-02-24  Tambet Ingo  <tambet@ximian.com>

	* red_serverinfo.py (dump_finished_cb): Removed use of "app" variable
	which was not defined.

	* red_search.py (SearchComponent.build): Set spacing.

	* red_searchbar.py (SearchBar.__init__): Ditto.

	* red_appwindow.py (AppWindow.assemble_toolbar): Old icon is better
	than no icon at all :)

	* red_pendingview.py (PendingView.__init__): Use PendingView class to
	store the status about cancel button. It was giving some troubles when
	we stored it in button.

	* red_depcomponent.py (DepComponent.build_dep_error_page): Set the "OK"
	button to be the default widget.
	(DepComponent.build_verified_ok_page): Ditto.
	(DepComponent.build_normal_page): Ditto for "Continue" button.

	* red_pendingview.py (PendingView.calculate_required_width): Calculate
	the width of glyphs using current gtk font.
	(PendingView.__init__): Use calculated width instead of magical "350"
	for PendingView dialog.
	(PendingView.set_title): Since default "msg" is None we want to
	convert it to empty string.

	* red_packageview.py (PackageView.do_popup): Commented out locking.

	* red_appwindow.py (AppWindow.run_sensitive_cb): Get sensitivity
	directly from pendingops, not from sidebar's run button. We happened
	to get here before sidebar gets updated.

	* red_menubar.py (MenuBar.__init__): Refresh menu items before before
	giving control to AcceleratorGroup, otherwise some items' sensitivity
	might be out of sync.

	* red_sidebar.py (SideBar.pendingops_changed_cb): Don't rush with
	updating, do it in the idle callback. Otherwise, with "Select all"
	we updated ourself once for every package.

	* red_toolbar.py (Toolbar.pendingops_changed): Ditto.

2003-02-24  Jon Trowbridge  <trow@ximian.com>

	* red_gettext.py (_): If we are in debug mode, replace strings by
	((strings)) to make it easy to spot untranslated strings.

	* red_main.py: Make sure that debug (and some other variables) get
	set right away.

2003-02-24  Tambet Ingo  <tambet@ximian.com>

	* red_summary.py (SummaryComponent.build): Catch busy signals.

	* red_packagearray.py (PackagesFromDaemon.schedule_refresh): We had
	problems with determining pending refresh. It got reset right after
	get_packages_from_daemon returned, but that function just kicked off
	query, results came later from different thread.
	(PackagesFromDaemon.refresh_start): New method. We need it to be
	"protected" data. Also, moved setting busy cursor here.
	(PackagesFromDaemon.refresh_end): New method, restore cursor here.
	(PackagesFromDaemon.refresh_pending): New method.
	(PackagesFromQuery.get_packages_from_daemon): Removed cursor changing,
	notify, that we are finshed getting data.
	(UpdatedPackages.get_packages_from_daemon): Ditto.

2003-02-22  Tambet Ingo  <tambet@ximian.com>

	* rcd_util.py (check_rcd_version): Implement.
	(connect_real): Make sure we have recent enough daemon.

	* Makefile.am (red_carpetsupport_DATA): Added red_console.py

	* red_users.py (User.__init__): Added new parameter "any_user". This
	represents "All" users in History page.
	(User.is_any_user): Return true for meta-user "All"

	* red_history.py (HistorySearchBar.updated): Use is_any_user method
	instead of string comparision.

2003-02-22  Jon Trowbridge  <trow@ximian.com>

	* Marked a whole bunch of strings for translation.  Made
	trivial changes to some text.

	* red_gettext.py: A home for translation-related magic.
	Currently just defined _ to be the identity function.

	* red_about.py (About.__init__): Removed the "this is really ugly"
	comment.  Hopefully the about box can get some design-love later
	on.

	* red_main.py: import red_console

	* red_console.py: Added an error console, so that we can get
	reasonable bug reports from people running rc from menus.

2003-02-21  Tambet Ingo  <tambet@ximian.com>

	* red_depcomponent.py (DepComponent.build_dep_error_page): Set
	shadow to main view.
	(DepComponent.build_dep_error_page): Use buttonbox to house button(s),
	so that all of them are sized consistently.
	(DepComponent.build_verified_ok_page): Here too.
	(DepComponent.build_normal_page): Ditto.
	(DepComponent.build_normal_page): Add gtk.STOCK_GO_FORWARD icon to
	"continue" button.

	* red_prefs.py (PrefsView.get_prefs_cb): Get preferences here, also
	catch exceptions.

	* red_serverinfo.py (dump_finished_cb): Catch exceptions.

2003-02-21  Joe Shaw  <joe@ximian.com>

	* red_activation.py: Make the entries activate the default.  For
	the activity dialog, set the parent.

	* red_appwindow.py: Give access keys and accelerators to the menu
	items, add an icon for File->Connect.

	* red_channelmodel.py: Remove some debugging output and move
	make_channel_view() out of here.

	* red_channeloption.py: Sort the channels alphabetically.

	* red_component.py: Add a stock() function which returns the stock
	id for a component and an access_key() function which returns the
	menu access key for a component.

	* red_history.py: Add an access key.

	* red_installfiles.py (install_local): Run the stat.S_ISDIR() in a
	try block or else we'll get an exception if the file isn't there.

	* red_mount.py (mount_channel): Handle ~ to mean $HOME.  If we
	can't mount a channel, run the dialog in the main thread.
	(FileEntry): Make the entries activate the default widget.
	(MountWindow): Ditto.  Also make the dialog transient of its
	parent.  Call the changed method on the model so it gets updated
	if the user activates the toggle button using the keyboard.  Set
	the "xalign" property on the toggle button so it's left-aligned.
	Make the OK button grab the default.

	* red_news.py: Add an access key.

	* red_packagearray.py (sort_pkgs_by_locked): Added.  Sorts the
	packages by whether it is locked.
	(changed_sort_by_locked): Added.

	* red_packagebook.py: Make the OK button grab the focus.

	* red_packageview.py (append_locked_column): Add
	change_sort_by_locked() as the sort_callback for this column.

	* red_search.py: Add an access key and replace its pixbuf() with
	stock().

	* red_serverinfo.py (view_server_info_cb): Set the default
	response to OK.
	(dump_xml): Set the dialog's parent.

	* red_sidebar.py: When populating the sidebar, use stock() if it
	doesn't return None.

	* red_statusoption.py (_status_types): Add a Locked status type.

	* red_subscriptions.py: Move make_channel_view() here from
	red_channelmodel.py.  Make the Close button grab the default.

	* red_summary.py: Add an access key.

	* red_thrashingview.py (pre_thrash_model): Save the cursor path
	and column so we can maintain keyboard focus.
	(post_thrash_model): Restore it if we had it.

	* red_transaction.py: Add an access key and Get rid of the
	pixbuf, it's not used anymore
	(long_name): Make it just "Pending Transactions".

	* red_users.py: Make the Close button grab the default.

2003-02-21  Tambet Ingo  <tambet@ximian.com>

	* red_packageview.py (PackageView.do_popup): Use the new icon
	for upgrade here also.

2003-02-21  Tambet Ingo  <tambet@ximian.com>

	* red_depcomponent.py (DepComponent.__init__): We are a GObject
	now, we want to emit signal when we're done with fetching data.
	(DepComponent.get_deps): New method, moved all data fetching code
	here from __init__ method. Use serverproxy method to fetch data,
	emit a signal when ready. Set buys while being busy.
	(DepComponent.build): Build a blank page since we don't have data
	yet. Catch the signal which notifes the data arrival.
	(DepComponent.build_normal_page): Build a "normal" page. Too bad
	we can't use quotes in method names :)
	(DepComponent.build_verified_ok_page): Build a page for all deps
	satisifed.
	(DepComponent.build_dep_error_page): Dependency error page.

2003-02-21  Jon Trowbridge  <trow@ximian.com>

	* red_statusoption.py (_status_types): Properly filter upgrades.

	* red_main.py (debug): Set the debug flag based on the
	RC_GUI_DEBUG environment variable.

	* red_packagearray.py: Removed debug spew.  Icon-related tweaks.

	* red_searchbar.py (SearchBar.__assemble): Remove the "Find Now"
	button, which wasn't really needed anyway.

	* red_pendingview.py: Add support for static or animated icons in
	the dialog.  Add the cool new spinning Rupert to the transact
	dialog.

	* red_depcomponent.py (DepComponent.build_dep_error): Make the
	error textview non-editable and hide the cursor.

	* red_appwindow.py (got_channels_cb): Add new icon to refresh
	progress dialog.

2003-02-21  Tambet Ingo  <tambet@ximian.com>

	* red_depcomponent.py (DepComponent.__init__): Set default values to
	install_packages and remove_packages to [] (instead of None). It
	caused problems when we try to add None and list types.

	* red_prefs.py (PrefsView.build): Sensitize views correctly depending
	on privileges.

	* red_subscriptions.py (SubscriptionsView.__init__): Ditto.

2003-02-21  Tambet Ingo  <tambet@ximian.com>

	* red_users.py: Import ximian_xmlrpclib.

	* red_appwindow.py (AppWindow.install_sensitive_cb): Check if user
	has permission to install or upgrade.
	(AppWindow.remove_sensitive_cb): Ditto for remove.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView_Transaction.cancelled): As added
	to FIXME: This is really ugly hack, but otherwise ui will be
	unresponsive if connection with rcd is lost (even if rcd comes back).

	* red_history.py (HistoryModel.set_component): New method. Model
	uses component to put it in busy state.
	(HistoryModel.get_history_cb): If we have a component, make it busy.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_pendingview.py (PendingView.finished): Emit "finished" singal
	here instead of in poll() method.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_users.py (PrivilegesModel.request_update_cb): Implement.
	Necessary to force the treeview update all cells if "superuser"
	privilege is toggled.
	(UsersOption): Added "updated" signal.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_locks.py (toggle_lock): Catch exceptions, let user know
	if something is wrong. Let serverlistener know we have updated.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_users.py (UsersWindow.password_update_cb): Reset password
	entries after successful password update.
	(PrivilegesModel.got_cb): Catch possible exception.
	(User.update): Use serverproxy for update.
	(User.delete): Use serverrpoxy for delete.

	* red_history.py: Cleaned up some unused stuff from last commit.

2003-02-20  Jon Trowbridge  <trow@ximian.com>

	* red_depcomponent.py: If we get a dependency error, show it in
	the component.  (Showing it in the dialog looks terrible, even
	for relatively simple errors.)

	* Makefile.am (red_carpetsupport_DATA): Updated.

	* red_main.py: Updated to reflect red_search/red_browse rename.

	* red_browse.py: Renamed to red_search.py.

	* red_search.py: Replaced with red_browse.py.

2003-02-20  Tambet Ingo  <tambet@ximian.com>

	* red_users.py: Changed users treeview to optionmenu. Use serverproxy
	for getting users/privileges. It turned out to be almost a rewrite :)

	* red_history.py (HistorySearchBar.build): Use UsersOption from
	red_users.
	(HistorySearchBar.updated): ditto.

2003-02-19  Joe Shaw  <joe@ximian.com>

	* Makefile.am: If we're installing usermode files, install into
	$(sbindir) instead of $(bindir).  Add red_locks.py.

	* red-carpet.glade: Delete.  We never used it.

	* red-carpet.in: Reorganize this a bit so we can pull in pygtk
	libs from the correct prefix.

	* rcd_util.py: Also get a "local" flag from
	red_settings.DaemonData.data_get() and
	red_settings.ConnectionWindow.get_server_info().
	(connect_to_server): If we're connecting locally, and we're root
	and we have /sbin/service, offer to start a daemon.
	(StartDaemon): New class which starts a daemon.
	(set_pref): Nuke this, it's been absorbed in red_prefs.py.

	* red_channelmodel.py (toggle_subscribed): Make this use
	ServerProxy.

	* red_prefs.py (PrefsView.build): Mostly rewrite this to get prefs
	async via ServerProxy.  Make the view a thrashing view
	(CellRendererPref): get the pref using get_list_item() instead of
	accessing the prefs directly.
	(PrefsModel): Make this a ListModel, make it mostly opaque.

	* red_serverlistener.py: import ximian_xmlrpclib.

	* red_settings.py (DaemonData.data_get): Expand the tuple to
	return a local flag.

2003-02-19  Tambet Ingo  <tambet@ximian.com>

	* red_news.py (NewsModel.get_news_cb): Catch xmlrpc faults.

	* red_history.py (HistoryModel): Use serverproxy.

2003-02-19  Jon Trowbridge  <trow@ximian.com>

	* red_serverlistener.py (poll_cb): Silently ignore xmlrpc faults
	when polling sequence numbers.  This sort of sucks, but keeps
	things from blowing up if something has gone terribly wrong
	(with permissions, for example).

	* red_packagearray.py (PackageArray.message_push): Support transient
	mesages.
	(PackagesFromQuery.set_packages): Display the number of matching
	packages in a transient message.
	(PackagesFromQuery.get_packages_from_daemon): Properly catch
	xmlrpc faults.
	(UpdatedPackages.get_packages_from_daemon): Properly catch
	xmlrpc faults.

	* red_mount.py (mount_cb): Catch xmlrpc faults and put up an error
	dialog.
	(unmount_cb): Ditto.

	* red_depcomponent.py (DepComponent.__init__): Catch dependency
	exceptions and show them in a dialog.  Pop the dependency
	component in a post-dialog thunk.

	* red_component.py (Component.message_push): Add support for
	transient messages.

	* red_appwindow.py (got_channels_cb): Catch xmlrpc faults and
	put up an error dialog.  Set the parent window on the server
	proxy dialog.
	(AppWindow.do_component_message_push): Always pop off transient
	messages when another message is pushed.

	* red_activation.py (ActivationWindow.activate_finished_cb): Catch
	xmlrpc faults and put up an error dialog.

	* rcd_util.py (dialog_from_fault): Run our dialog in an idle
	function.  Added support for a post-dialog thunk.
	(server_proxy_dialog): Allow a parent window to be passed in.

2003-02-19  Tambet Ingo  <tambet@ximian.com>

	* red_news.py: Use red_listmodel.ListModel instead of home-grown
	one. Also, use serverproxy to retrieve data.
	(NewsView.__init__): Use thrashingview instead of standard treeview.

2003-02-18  Joe Shaw  <joe@ximian.com>

	* rcd_util.py (md5ify_password): Python 2.2's md5 module contains
	hexdigest(), so get rid of our impl.
	(get_channel_icon): Use the name of the fault, not the number.
	(set_pref): Use a ServerProxy and run a gtk main loop to block the
	result while things finish up in the thread.  May need to rethink
	this.

	* red_serverproxy.py (ServerThread): If we encounter a
	ximian_xmlrpclib.Fault, save it and throw it when the user calls
	get_result().
	
	* red_locks.py (toggle_lock): Use ServerProxy.

	* red_packagearray.py (PackagesFromQuery): Added a locks_changed
	handler which flushes the query cache and chains up.
	(PackagesFromDaemon): Added a locks_changed handler which
	schedules a refresh of the query.

	* red_prefs.py: Make categories mandatory, use ServerProxy.

2003-02-18  Jon Trowbridge  <trow@ximian.com>

	* red_pendingview.py (PendingView.set_label): Break up long
	messages to span multiple lines.
	(PollPending_Transact.finish): Call the callback when we are
	partially finished, not just at the end.  This gives us better
	interactive performance.
	(PendingView_Transaction.poll_worker): Since we can't cancel a
	transaction after the download is complete, desensitize the cancel
	button from the start if there is nothing to download.
	(PendingView_Transaction.update_pending_cb): Do the right thing
	if we get called with partial results.

	* red_depcomponent.py: Make the throbber throb during the
	transaction.

	* red_packagearray.py (PackagesFromQuery): Use ServerProxies.

	* red_mount.py: Use ServerProxies.

	* red_pendingview.py: A bunch of changes to
	PendingView_Transaction to make it use ServerProxies.

	* red_summary.py (SummaryComponent.select_all_sensitive): If there
	are no updates, don't sensitize the select all/select none menu
	items.

	* red_pendingops.py (set_action): Restored the code that cancels
	any operations on packages w/ the same name.

	* red_packagearray.py (PackagesFromQuery.packages_changed): Make
	sure that PackagesFromDaemon's packages_changed also gets called.
	This makes sure that our search window gets updated after we do a
	transaction, etc.

	* red_browse.py (BrowseComponent): Implemented
	select_all/unselect_all magic.

2003-02-14  Tambet Ingo  <tambet@ximian.com>

	* red_locks.py (toggle_lock): New file, new function. Locks
	unlocked package and vice versa.

	* red_serverlistener.py: Added listener for locks.
	(ServerListener.users_changed): New method which should be
	implemented by subclasses which want to catch locks changed events.

	* red_packageview.py (PackageView.do_popup): Add Lock/Unlock item
	to popup menu.
	(PackageView.activated_cb): Allow resizing if action name is visible
	and col can get wide.

	* red_packagearray.py (UpdatedPackages.locks_changed): Refresh
	itself on locks_changed event.

	* rcd_util.py (get_package_channel_name): Return "None" instead of
	"????" if package doesn't have channel (or even guessed channel).

	* red_sidebar.py (SideBar.build): Set ButtonBox' layout to "start"
	so it acts like shortcut bar.

2003-02-13  Jon Trowbridge  <trow@ximian.com>

	* red_packagearray.py (sort_pkgs_by_name): Fixed a bug that I
	introduced yesterday, which caused sorting to stop working
	properly.
	
	* red_pendingview.py: Removed some annoying debug spew.

2003-02-12  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py (open_or_raise_window): Set the window
	transient for the AppWindow.
	(assemble_menubar): Pass in the AppWindow to install_local() and
	install_remote() so they can be set transient for it.

	* red_browse.py: Remove the red_packagebrowser import.

	* red_installfiles.py (install_local, install_remote): Take our
	parent window as an arg.

	* red_pendingview.py (PendingView.__init__): Allow our window to
	be resized and set a default size.

2003-02-12  Jon Trowbridge  <trow@ximian.com>

	* red_transaction.py (TransactionArray.pendingops_changed): When
	we detect a change in the pending ops, do the change to the
	TransactionArray in an idle function instead of right away.  This
	makes "Select All" and "Select None" actually work in a reasonable
	amount of time.

	* red_pendingops.py: Removed some old cruft.

	* red_packagearray.py (sort_pkgs_by_name): Cache the lower-case
	version of package names.  This speeds things up slightly.

	* red_searchbar.py: Lots of hacking.

	* red_packagepage_info.py (_info_rows): Add a "Channel" row.
	(build_rows): If our row value is a widget, and the function that
	builds the row returns None, just drop the whole row.

	* red_packagearray.py (PackagesFromQuery.set_query): Add an
	optional query_filter argument.
	(PackagesFromQuery.query_finished_cb): Filter our list of packages
	using the query_filter function.  Cache the results of the query
	before we do any filtering.
	(PackagesFromQuery.get_packages_from_daemon): Do the right thing
	if we are handed the empty query.

	* red_statusoption.py: Various changes for the Browse component.

	* red_channeloption.py: Various changes for the Browse component.

	* red_about.py (contributors): Credit where credit is due.

	* red_browse.py: Added.  First version of a unified search
	component.

2003-02-12  Tambet Ingo  <tambet@ximian.com>

	* red_packagearray.py (PackagesFromQuery.filter_duplicates):
	Implement. Prefer system packages as they have correct "installed
	size" (as opposed to channel packages with "package size").
	Don't scan through packages if we don't have system packages.

	* red_sectionoption.py (SectionOption.assemble_menu): Activate
	current menuitem if necessary.

2003-02-11  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py (AppWindow.__init__): Connect to our
	size_allocate signal and load our width, height, and sidebar
	width.
	(save_geometry): Added.  Uses red_settings to save our width,
	height, and sidebar size to disk.
	(load_geometry): Load it up.

	* red_packageview.py (CellRendererActivatablePixbuf): Added new
	class.  Basically proxies everything to a CellRendererPixbuf,
	except it handles the on_activate, which emits the "activated"
	signal.
	(PackageView.append_action_column): Add an "activatable"
	parameter, defaulting to on.  Instead of creating a regular pixbuf
	cell renderer, create our activatable one and connect to the
	activated signal, which then emits an "activated" signal on the
	TreeView.

	* red_transaction.py (TransactionComponent.build): Show the action
	name for our pending transactions so it's more clear what happens
	when you disable an action on a package.
	(TransactionSimple.build): Make these not activatable.

2003-02-11  Tambet Ingo  <tambet@ximian.com>

	* red_packagearray.py (pkg_status): Return "uninstalled" string
	for uninstalled packages.
	(pkg_status_icon): Show uninstalled icon.

	* red_packageview.py (PackageView.append_current_version_column):
	Enable resizing of the column.
	(PackageView.append_version_column): Ditto.
	(PackageView.append_name_column): Ditto.

	* red_transaction.py (TransactionComponent.act_cb): Add page
	title.

	* red_channelbrowse.py (ChannelBrowseComponent.build): Add page
	title. Add shadow.

	* red_search.py (SearchComponent.build): Add shadow.

	* red_system.py (SystemComponent.build): Add shadow.

	* red_news.py (NewsView.__init__): Add shadow.

	* red_transaction.py (TransactionSimple.__init__): Add shadow.
	(TransactionComponent.build): Add shadow.

	* red_depcomponent.py (DepComponent.build): Add shadow. Add page
	title.

	* red_history.py (HistoryView.build): Add shadow.
	(long_name): name = long_name.
	(HistorySearchBar.build): Removed unnecessary words "Package".
	(HistoryView.build): Set columns resizable.

	* red_summary.py (SummaryComponent.build): Add shadow.

2003-02-10  Tambet Ingo  <tambet@ximian.com>

	* red_appwindow.py (AppWindow.__init__): Don't show_all()
	everything. show_all() main area, leave sidebar's visibility to
	itself.
	(refresh_cb): Don't block UI while getting list of channels.

	* red_sidebar.py (SideBar.__init__): Read initial visibility from
	config.
	(SideBar.change_visibility): Save visibility.

	* red_packagepage_info.py (pkg_description): Implement. We want
	to format package descriptions.

2003-02-07  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py: Move the install/remove/cancel/info
	sensitivity and activation callbacks out the toolbar's scope and
	into the class's scope.  Add "Package Information" to the View
	menu.  Add back the Actions menu and move "Refresh Channel Data"
	and "Verify System Dependencies" there and add in "Run
	Transaction", "Install Package", "Remove Package", and "Cancel
	Action".

	* red_menubar.py: Make the "pixbuf" argument mean a gtk.gdk.Pixbuf
	and added an "image" argument which means a gtk.Image widget.
	When the image is set, create the gtk.ImageMenuItem using the name
	and the provided image.

	* red_packageview.py (PackageView.do_popup): Change "Remove
	action" to "Cancel action" to match the toolbar and remove
	confusion over the work "Remove".
	(PackageView.append_action_column): Don't show the action name by
	default.

	* red_serverinfo.py: Change some references of "server" to
	"daemon".

	* red_summary.py (SummaryComponent.build): Add back in the action
	column.

	* red_toolbar.py (Toolbar.sensitize_toolbar_items): Don't pass any
	arguments to the sensitize function, to match the menubar
	arguments.

	* red_transaction.py (TransactionSimple.build): Show the action
	name in this one.

2003-02-07  Frank Belew  <frb@ximian.com>

	* red-carpet.in: added red_carpet_pixbuf_path to fix art loading

	* red_pixbuf.py: fixed up pixbuf_path to fix art loading

	* src/Makefile.am: added red_toolbar.py to red_carpetsupport_DATA

2003-02-07  Frank Belew  <frb@ximian.com>

	* red-carpet.in: added red_carpet_libdir to the path append so client
	works after make install

2003-02-07  Tambet Ingo  <tambet@ximian.com>

	* red_packagepage_info.py (pkg_section): Implement.
	(build_rows): Show icons and nicer text for package sections.

	* red_pendingops.py (package_action): Use get method with default
	value instead of [].

2003-02-06  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py (AppWindow.connect_sidebar_buttons): Don't
	sensitize the details button.
	(AppWindow.assemble_toolbar.info_cb): show_package_info() is in
	red_packagebook now, not red_packagebrowser.

	* red_channelbrowse.py (ChannelBrowseComponent.build): Go back to
	using a PackageView.

	* red_depcomponent.py (DepComponent.activated): Desensitize the
	whole sidebar, not just the run button.

	* red_packagebook.py: Move the PackagePage out of here and into
	its own file, mainly for circular dependency reasons.
	(show_package_info): Move this here.  Connect to the "destroy"
	signal, not the "destroy_event" signal.

	* red_packagebrowser.py: Deleted.  The show_package_info()
	functionality has been moved to red_packagebook.py and the
	popup functionality has been moved to red_packageview.py.

	* red_packagepage.py: Added.  Contains the base PackagePage class
	and the PackagePage_History class (formerly PageHistory).  Removed
	the unused PageSummary class.

	* red_packagepage_deps.py, red_packagepage_info.py: Fix up the
	module references.

	* red_packageview.py (PackageView.do_popup): Moved the code from
	red_packagebrowser.py here.

	* red_search.py (SearchComponent.build): Connect the view to the
	component and go back to using PackageView.

	* red_sidebar.py (SideBar): Derive also from
	red_pendingops.PendingOpsListener.  Kill the transaction bar and
	do it ourselves.  Get rid of the RunButton class.  Handle updating
	the pending transactions label and the run button's sensitivity in
	our pendingops_changed() implementation.

	* red_summary.py, red_search.py: Go back to using PackageView.

	* red_thrashingtreeview.py (post_thrash_model): If we don't have
	any more items in our tree, our saved selpath will be invalid.
	Catch the ValueError exception and happily go on.

	* red_transaction.py (TransactionBar): Removed.  Equivalently
	handled now by the sidebar.
	(TransactionComponent.build): Connect the view to the component.

2003-02-06  Tambet Ingo  <tambet@ximian.com>

	* red_pixbuf.py: Added Peter Bowen's patch to append art
	dir to system path, not to hardcode it to '../'.

	* red_history.py (HistoryComponent.pixbuf): Updated icon.

	* red_transaction.py (TransactionBar.update_label): Add a
	newline if there are both installs and removals. Otherwise it
	got too long.

	* red_sidebar.py (SideBar.change_visibility): Implement

	* red_appwindow.py (AppWindow.connect_sidebar_buttons): Connect
	sidebar's buttons here.
	(AppWindow.activate_component): Update toolbar items.
	(AppWindow.info_cb): Add pixbuf to "info" toolbar item.
	(AppWindow.__init__): Allow shrinking for 2nd pane. Otherwise,
	if main window is not big enough, both sides will fight for
	their part. Set icon for appwindow.
	(AppWindow.assemble_menubar): Added
	View/Hide sidebar.

	* red_sidebar.py (RunButton): New class for sidebar's "Run"
	button. It is subclass of PendingOpsListener so it can
	sensitize itself correctly.
	(SideBar.sensitize_run_button): Convenient function, moved here
	from red_appwindow.py.
	(SideBar.build): Use new icons for buttons.

2003-02-05  Joe Shaw  <joe@ximian.com>

	* red_channeloption.py (get_channel): We could get a -1 from
	self.get_history().  If so, return None.

	* red_mount.py: Set the title of the mount and unmount dialogs.
	Iterate over the keys of a dictionary by doing "for x in d"
	instead of "for x in d.keys()" for efficiency.

2003-02-05  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py: Switch the naming of "toolbar" and "shortcut
	bar"; the buttons that take the user to different components
	should be the shortcut bar.  Also changed "show_on_toolbar" to
	"show_in_shortcuts" throughout all the files.
	(AppWindow): Remove the transactionbar from here.  It's in the
	sidebar now.  Replace the hbox containing the sidebar and the main
	area with an hpaned, so that it can be resized.  Make the toolbar
	a red_toolbar.Toolbar.
	(assemble_toolbar): Use the red_toolbar API, and hook up the
	buttons.  Replace the Settings and Help icons with Cancel, Info,
	and Subscriptions buttons.
	(do_component_package_selected): Added, sensitize the toolbar
	items.

	* red_channelbrowse.py: Change the name to "Packages".  Connect
	the view to the component so we can signal changes to the toolbar.

	* red_component.py (Component): Add a package_selected, which
	emits the new signal of same name.  Added a get_current_package
	method which returns the last selected package.  Added a
	connect_view method which proxies the view's selected signal to
	the component's package_selected signal.
	(ComponentListener): Add ids for the package_selected signal, add
	a do_component_package_selected virtual method.

	* red_history.py: Change some text, make the title text stand by
	itself.

	* red_sidebar.py: Toolbar -> ShortcutBar rename.  Add the
	transaction bar here.

	* red_summary.py: Don't show the action column, don't show the
	channel name by default.  Connect the view to the component.

	* red_system.py: Don't show this in the shortcut bar.

	* red_toolbar.py: Added.  Listens to changes in the pending
	operations and calls the sensitize functions as necessary.

	* red_transaction.py (TransactionBar.__init__): Don't require the
	AppWindow anymore.  This is such a simple piece of code, it should
	probably just go away and be absorbed by the sidebar.

2003-02-05  Tambet Ingo  <tambet@ximian.com>

	* red_history.py (HistorySearchBar.build): Changed some labels.
	(HistoryComponent.build): Show component's name in main window.

	* red_news.py (NewsComponent.build): Ditto.

	* red_system.py (SystemComponent.build): Ditto.

	* red_summary.py (SummaryComponent.build): Ditto, removed "You have
	N updates available" label.

	* red_appwindow.py (register_component):  Activate first component
	in gtk.idle to get the default active componet on toolbar.
	(AppWindow.__init__): Moved creation throbber to it's own method,
	init is getting too long. Added "Shortcut bar" to main window.
	(AppWindow.create_throbber): New method.
	(AppWindow.assemble_shortcut_bar): Construct shortcut bar here.

	* red_sidebar.py (SideBar.build): Center icon and label on buttons.
	(Toolbar.construct): Ditto.

2003-02-04  Tambet Ingo  <tambet@ximian.com>

	* Makefile.am (red_carpetsupport_DATA): Added red_sidebar.py.

	* red_sidebar.py: New file.
	(SideBar): New class, implements sidebar for the main window.
	(Toolbar): New class, implements new toolbar. I think
	red_extras/toolbar.c is now deprecated?

	* red_transaction.py (TransactionComponent.build): Made
	data model global to be shared with TransactionSimple.
	(TransactionSimple): New class.

	* red_news.py (NewsComponent.show_on_toolbar): Yes,
	we want to be on the toolbar.

	* red_history.py (HistoryComponent.show_on_toolbar): Ditto.

	* red_channelbrowse.py (ChannelBrowseComponent.name): Made
	it's name shorter (we still have (long_name) method).

	* red_summary.py (SummaryComponent.name):  Ditto.

	* red_system.py (SystemComponent.name): Ditto.

	* red_appwindow.py (AppWindow.__init__): Added new sidebar
	widget, modified other code to work with it.
	(AppWindow.register_component): Add all components to toolbar.
	Toolbar decides which components are visible.

2003-02-03  Jon Trowbridge  <trow@ximian.com>

	* red_pendingview.py (PendingView_Simple): Revamped to use
	ServerProxys for the poll_pending calls so that we won't ever
	block on a busy daemon.  PendingView_Simple is what is used for
	feedback when refreshing channel data, so that operation is now
	much nicer.  The total number of threads we throw off is bounded,
	so that the whole system won't bog down if your rcd sees a whole
	bunch of channels.

2003-02-03  Tambet Ingo  <tambet@ximian.com>

	* red_activation.py (ActivationWindow.activate): Don't block
	UI, use call rpc call through serverproxy. Fixed email storing
	to conf on successful activation.

	* rcd_util.py (server_proxy_dialog): Moved it from
	red_serverinfo.py to here.

	* red_serverinfo.py (dump_finished_cb): Use dialog from new
	location.

	* red_transaction.py (TransactionArray.__init__): Show packages
	with actions only.

	* red_summary.py (SummaryComponent.select_all_sensitive): Select
	all/none are active only if user has "upgrade" privilege.
	(SummaryComponent.updates_changed_cb): Sort by importance by
	default.

	* red_component.py (Component.select_all_sensitive): New method
	to determine whether select all/none should be sensitve.

	* red_appwindow.py (AppWindow.__init__): Removed some old unused
	variables.
	(AppWindow.select_all_sensitive_cb): Callback to sensitize Select
	All/None menu items.
	(AppWindow.activate_sensitive_fn): Activate is available only for
	superuser.

2003-01-31  Jon Trowbridge  <trow@ximian.com>

	* Removed extraneous imports from lots of files.

	* red_statusoption.py (StatusOption.__init__): Correctly chain
	the constructors.

	* red_serverlistener.py: Removed some really annoying debug spew.

	* red_searchbar.py: Light hacking.

	* red_menubar.py (MenuBar.exercise_menubar): Added.  Call (almost)
	all menu item callbacks in sequence.

	* red_channeloption.py (ChannelOption.__assemble): Added an
	(optional) "Any Channel" menu item.

	* red_appwindow.py (AppWindow.assemble_debug_menubar): Added.
	Access to useful debugging functions.
	(AppWindow.exercise_components): Added.  Activates all components
	in sequence.

	* red_main.py: Added debug flag.

	* Makefile.am (red_carpetsupport_DATA): Added new files.  Now
	we should be able to make distcheck again.

2003-01-31  Tambet Ingo  <tambet@ximian.com>

	* red_users.py: Removed some old cruft.
	(UsersData.refresh): Make sure active_user still exists.
	(UsersData.get_current_user): Implement.
	(UsersData.delete_user): Try to select current user after
	deleting active user.
	(UsersData.set_active_user): Emit signal only if active user
	really changed.
	(UsersWindow.__init__): Select current user by default.
	(UsersWindow.active_user_changed_cb): Don't trust return values
	without checking.

	* red_summary.py (SummaryComponent.updates_changed_cb): Added
	special case if there's no updates.

2003-01-30  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py (run_transaction_cb): Fix a regression where we
	couldn't remove packages listed as upgrades.  Feels like a hack,
	though, so add a FIXME about it.

2003-01-30  Joe Shaw  <joe@ximian.com>

	* red_appwindow.py (run_transaction_cb): Added.  Call this instead
	of into some random function in red_transaction.py.
	(verify_deps_cb): Added.
	(assemble_menubar): Add "Verify System Dependencies"

	* red_component.py: Remove some cruft.

	* red_depcomponent.py: Unify the dependency resolution and
	transaction in here.  We take a list of packages to install and
	remove and whether this is a verification as arguments to the
	constructor now, instead of asking red_pendingops.  Resolve deps
	immediately and build the UI on the results, connect the continue
	button to a method which runs the transaction and connects a
	PendingView_Transaction window to it.

	* red_pendingops.py (packages_with_actions): Take an optional
	argument which is the list of actions to check for.  Use list
	comprehension syntax to make it easier to read.
	(resolve_dependencies): Removed.  Moved into red_depcomponent.py.

	* red_transaction.py (resolve_deps_and_transact): Removed.
	(begin_transaction): Ditto.  Moved into red_depcomponent.py.

2003-01-30  Jon Trowbridge  <trow@ximian.com>

	* red_serverlistener.py: Changes to make the sequence number
	checks happen using ServerProxies, so that we'll get the nice
	behavior if the daemon crashes or otherwise goes away.

	* red_serverproxy.py: Dead daemon code moved into
	red_deaddaemon.py.

	* red_deaddaemon.py: Added.  Contains a better version of the
	"lost contact with the daemon" dialogs/code that used to be in
	red_serverproxy.py.

2003-01-30  Tambet Ingo  <tambet@ximian.com>

	* red_users.py (User.privileges_get): Make sure user has at least
	"view" privilege.
	(User.update): Notify serverlistener that we have updated.
	(User.delete): Ditto.
	(UsersWindow.build_password_part): Added a frame with user's
	name on it to make it more explicit. Senzitise entries and button
	to make it more intuitive.
	(UsersWindow.selection_changed_cb): Catch programmatically changed
	active_user and modify the visual selection.
	(UserAdd.add_cb): Set the new user active_user.
	(UsersData.set_active_user_cb): New method to wait until threads
	are finished.
	(UsersData.add_user): Use (set_active_user_cb)
	(UsersData.delete_user): Ditto.
	(UsersModel.get_iter_for_user): Find it by name, don't require
	equality.

	* red_serverinfo.py (dump_xml): Get dump in new thread to avoid
	UI blocking.
	(filesel_destroy): Cleanup on destroy.
	(show_server_proxy_dialog): New function to show to user that
	we're working. It should probably be moved to red_serverproxy
	so it could be used by others (activation, ...) also.

2003-01-29  Joe Shaw  <joe@ximian.com>

	* red_settings.py: If .gnome2 or .gnome2_private don't exist,
	create them.

2003-01-29  Tambet Ingo  <tambet@ximian.com>

	* red_mount.py (select_and_mount): Removed, not used anymore.

	* red_appwindow.py (AppWindow.unmount_sensitive_fn): Get server
	info from new location.

	* red_serverinfo.py (view_server_info_cb): New file, moved
	(red_appwindow.view_server_info_cb) here, implemented "dump xml"
	button.

2003-01-28  Joe Shaw  <joe@ximian.com>

	* rcd_util.py: Add a current_user global.
	(register_server): Reset the current_user
	(reset_current_user, get_current_user): Added.  Gets the current
	user making the calls, so the client doesn't have to muck around
	with transport details.

	* red_users.py (User.update): Set the new password on the server
	object.
	(PermissionsView.__init__.activated_cb): If we're editing our own
	privileges and we're disabling the superuser privilege, warn the
	user because this is bad bad bad.
	(UsersWindow.build): Connect to the model's changed signal and
	sensitize the change password table if the current user is editing
	himself or has superuser privileges.  This allows users to edit
	their own passwords.

	* ximian_xmlrpclib.py (Transport.request): Reset our tried_once
	attribute to 0 once we've made our auth request.  This way, if our
	password requirement changes, we'll try again before giving up.
	(ServerProxy.set_username, ServerProxy.set_password): Added.
	These methods allow setting of the username and password outside
	of the constructor.

2003-01-28  Tambet Ingo  <tambet@ximian.com>

	* red_users.py: Rewrote models to make things (hopefully)
	suck less.

2003-01-27  Jon Trowbridge  <trow@ximian.com>

	* red_users.py: Rearranged the dialog a bit.  Made pretty much
	everything in sight a ServerListener.  Added code so that stuff
	will automatically refresh if the daemon reports a user change
	while the dialog is open.  If the user doesn't have superuser
	privileges, a bunch of the widgets will now be insensitive.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Change the ChannelModel to derive from
	red_extra.ListModel to red_listmodel.ListModel, and remove a large
	chunk of code.

	* red_packagearray.py: Ditto.

	* red_listmodel.py: Created a ListModel class, which moves a lot
	of code duplicated in the PackageArray and ChannelModel to here.
	Includes the "changed" and "changed_one" signals, the
	pending_changes queue, the sort and filter functions, and the
	len/get/get_all() methods.

	* red_statusoption.py (_status_types): For the "Installed" list,
	we want to show installed packages with the same name.

	* red_thrashingtreeview.py (TreeView): We need to call
	gtk.TreeView.set_model(), calling the constructor isn't sufficient.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_packageview.py: Call the thrashing treeview's constructor
	explicitly.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Add a TRANSIENT column, take sort and
	filter functions, make it pretty similar to a PackageArray so we
	can share some code between them with an abstract class later.
	Add a "changed" signal.  Make the view for subscriptions use the
	ChannelModel and derive from a thrashing treeview.

	* red_mount.py: Get rid of the mounted_channels global list.  We
	don't really need it, and we'll just ask the daemon for our
	transient channels instead.  Make the treeview in the unmount
	window use a ChannelModel instead of a ListStore so it handles
	channel and subscription changes correctly, don't create a column
	for an icon, since mounted channels don't have icons.

	* red_packageview.py: Make the PackageView derive from
	red_thrashingtreeview.TreeView and move most of the thrashing code
	into an abstract class so things can use it for ChannelModels too.

	* red_thrashingtreeview.py: Abstract widget which derives from
	gtk.TreeView and thrashes the model so changes are rendered
	correctly.

2003-01-24  Tambet Ingo  <tambet@ximian.com>

	* red_appwindow.py (AppWindow.register_component): Put on the
	toolbar only if component asks for it.

	* red_component.py (Component.show_on_toolbar): New method to
	determine whether component should be placed on the toolbar.

	* red_summary.py (SummaryComponent.show_on_toolbar): Yes, put
	me on toolbar.

	* red_transaction.py (TransactionComponent.show_on_toolbar): ditto.

	* red_channelbrowse.py (ChannelBrowseComponent.show_on_toolbar):
	ditto.

	* red_system.py (SystemComponent.show_on_toolbar): ditto.

	* red_packagebrowser.py (show_package_info): Don't show more than
	one dialog fore every package.

	* red_appwindow.py (AppWindow.mount_callback): Use new dialog
	widget.

	* red_mount.py (FileEntry): New class which looks (and acts) a bit
	like GnomeFileEntry.
	(MountWindow): New class to mount channels.
	(mount_channel): Added optional name argument for channel name.

	* red_packagearray.py (UpdatedPackages.subscriptions_changed): 
	(UpdatedPackages.channels_changed): Removed server argument.

	* test-listeners.py (MyServerListener.channels_changed): ditto,
	just to be in sync.

2003-01-24  Jon Trowbridge  <trow@ximian.com>

	* red_packagebrowser.py (PackageBrowser.show_popup_cb):
	Desensitize the remove/install/upgrade items in the right-click
	menu if we don't have sufficient privileges to perform those
	actions.

	* red_appwindow.py (AppWindow.assemble_menubar): Desensitize the
	File->Install, File->Mount and File->Unmount menu items if we
	don't have sufficient privileges to perform the associated
	actions.

	* red_menubar.py (MenuBar.refresh_items): Added code to allow
	sensitive functions and callbacks to be passed in as sequences,
	where the 0th item is the actual callable and the subsequent items
	are arguments to the callable... sort of a poor man's lexical
	closure.

	* red_packagearray.py (PackagesFromQuery): Multiple small changes to
	reflect revised ServerListener API.

	* red_channeloption.py (ChannelOption): Ditto.

	* red_channelinfo.py (ChannelInfo): Ditto.

	* red_channelmodel.py (ChannelModel): Ditto.

	* red_serverlistener.py: Extended to track the user sequence
	number as well as the world sequence numbers, and to clear the
	permission cache (via a call to rcd_util.reset_server_permissions)
	when the user sequence number changes.  When polling the server,
	execute both sequence-number-fetching calls as normal xml-rpc
	calls in a thread, instead of using ServerProxy objects.  If we
	detect a change, throw off an idle function to notify the
	ServerListeners.  This ensures that the notification happens in
	the main thread.  Also, removed a bunch of cruft which caused the
	server to be propogated throughout the ServerListener calls.  Our
	current policy is that if you need a server object, you get it by
	just calling rcd_util.get_server.

	* red_about.py (About.__init__): Use the copyright years from
	red_main.red_copyright, instead of hard-wiring it into the string.

	* red_main.py (red_copyright): Added a variable containing the
	program's copyright years, along with the name and version.

	* rcd_util.py (check_server_permission): Added.  Tests to see if
	the user has the specified permission on the server.  The results
	are cached, so subsequent queries don't require a (potentially
	blocking) xml-rpc call.
	(reset_server_permissions): Clears the permission cache.


2003-01-23  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Begin porting this over to be a
	RedListModel and ServerListener.  Still need to thrash the model,
	add filtering and proper sorting, and probably optimize for the
	local subscription changed case.

	* red_serverlistener.py: Fix a bug where channel seqno listeners
	were being signaled for a change in the subscription seqno.

	* red_subscriptions.py: Removed some code which didn't appear to
	have any purpose and was causing tracebacks.


2003-01-23  Jon Trowbridge  <trow@ximian.com>

	* red_packagebrowser.py (PackageBrowser.show_popup_cb): Use the
	extra time and button number arguments when popping up the menu.

	* red_packageview.py (PackageView.button_clicked_for_popup_cb):
	Propagate the event button number and time through the chain of
	callbacks and idle functions, since the GdkEvent itself seems to
	get mangled by the time we actually need this info to pop up our
	menu.  This fixes the weird problem (due to a bad event time)
	where the pop-up menu would disappear unless button 3 was held
	down
	(PackageView.do_popup): Support the extra arguments discussed
	above.
	

	* Makefile.am (red_carpetsupport_DATA): Updated the list of files
	so that we can make distcheck.

