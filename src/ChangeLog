2003-01-28  Tambet Ingo  <tambet@ximian.com>

	* red_users.py: Rewrote models to make things (hopefully)
	suck less.

2003-01-27  Jon Trowbridge  <trow@ximian.com>

	* red_users.py: Rearranged the dialog a bit.  Made pretty much
	everything in sight a ServerListener.  Added code so that stuff
	will automatically refresh if the daemon reports a user change
	while the dialog is open.  If the user doesn't have superuser
	privileges, a bunch of the widgets will now be insensitive.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Change the ChannelModel to derive from
	red_extra.ListModel to red_listmodel.ListModel, and remove a large
	chunk of code.

	* red_packagearray.py: Ditto.

	* red_listmodel.py: Created a ListModel class, which moves a lot
	of code duplicated in the PackageArray and ChannelModel to here.
	Includes the "changed" and "changed_one" signals, the
	pending_changes queue, the sort and filter functions, and the
	len/get/get_all() methods.

	* red_statusoption.py (_status_types): For the "Installed" list,
	we want to show installed packages with the same name.

	* red_thrashingtreeview.py (TreeView): We need to call
	gtk.TreeView.set_model(), calling the constructor isn't sufficient.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_packageview.py: Call the thrashing treeview's constructor
	explicitly.

2003-01-24  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Add a TRANSIENT column, take sort and
	filter functions, make it pretty similar to a PackageArray so we
	can share some code between them with an abstract class later.
	Add a "changed" signal.  Make the view for subscriptions use the
	ChannelModel and derive from a thrashing treeview.

	* red_mount.py: Get rid of the mounted_channels global list.  We
	don't really need it, and we'll just ask the daemon for our
	transient channels instead.  Make the treeview in the unmount
	window use a ChannelModel instead of a ListStore so it handles
	channel and subscription changes correctly, don't create a column
	for an icon, since mounted channels don't have icons.

	* red_packageview.py: Make the PackageView derive from
	red_thrashingtreeview.TreeView and move most of the thrashing code
	into an abstract class so things can use it for ChannelModels too.

	* red_thrashingtreeview.py: Abstract widget which derives from
	gtk.TreeView and thrashes the model so changes are rendered
	correctly.

2003-01-24  Tambet Ingo  <tambet@ximian.com>

	* red_appwindow.py (AppWindow.register_component): Put on the
	toolbar only if component asks for it.

	* red_component.py (Component.show_on_toolbar): New method to
	determine whether component should be placed on the toolbar.

	* red_summary.py (SummaryComponent.show_on_toolbar): Yes, put
	me on toolbar.

	* red_transaction.py (TransactionComponent.show_on_toolbar): ditto.

	* red_channelbrowse.py (ChannelBrowseComponent.show_on_toolbar):
	ditto.

	* red_system.py (SystemComponent.show_on_toolbar): ditto.

	* red_packagebrowser.py (show_package_info): Don't show more than
	one dialog fore every package.

	* red_appwindow.py (AppWindow.mount_callback): Use new dialog
	widget.

	* red_mount.py (FileEntry): New class which looks (and acts) a bit
	like GnomeFileEntry.
	(MountWindow): New class to mount channels.
	(mount_channel): Added optional name argument for channel name.

	* red_packagearray.py (UpdatedPackages.subscriptions_changed): 
	(UpdatedPackages.channels_changed): Removed server argument.

	* test-listeners.py (MyServerListener.channels_changed): ditto,
	just to be in sync.

2003-01-24  Jon Trowbridge  <trow@ximian.com>

	* red_packagebrowser.py (PackageBrowser.show_popup_cb):
	Desensitize the remove/install/upgrade items in the right-click
	menu if we don't have sufficient privileges to perform those
	actions.

	* red_appwindow.py (AppWindow.assemble_menubar): Desensitize the
	File->Install, File->Mount and File->Unmount menu items if we
	don't have sufficient privileges to perform the associated
	actions.

	* red_menubar.py (MenuBar.refresh_items): Added code to allow
	sensitive functions and callbacks to be passed in as sequences,
	where the 0th item is the actual callable and the subsequent items
	are arguments to the callable... sort of a poor man's lexical
	closure.

	* red_packagearray.py (PackagesFromQuery): Multiple small changes to
	reflect revised ServerListener API.

	* red_channeloption.py (ChannelOption): Ditto.

	* red_channelinfo.py (ChannelInfo): Ditto.

	* red_channelmodel.py (ChannelModel): Ditto.

	* red_serverlistener.py: Extended to track the user sequence
	number as well as the world sequence numbers, and to clear the
	permission cache (via a call to rcd_util.reset_server_permissions)
	when the user sequence number changes.  When polling the server,
	execute both sequence-number-fetching calls as normal xml-rpc
	calls in a thread, instead of using ServerProxy objects.  If we
	detect a change, throw off an idle function to notify the
	ServerListeners.  This ensures that the notification happens in
	the main thread.  Also, removed a bunch of cruft which caused the
	server to be propogated throughout the ServerListener calls.  Our
	current policy is that if you need a server object, you get it by
	just calling rcd_util.get_server.

	* red_about.py (About.__init__): Use the copyright years from
	red_main.red_copyright, instead of hard-wiring it into the string.

	* red_main.py (red_copyright): Added a variable containing the
	program's copyright years, along with the name and version.

	* rcd_util.py (check_server_permission): Added.  Tests to see if
	the user has the specified permission on the server.  The results
	are cached, so subsequent queries don't require a (potentially
	blocking) xml-rpc call.
	(reset_server_permissions): Clears the permission cache.


2003-01-23  Joe Shaw  <joe@ximian.com>

	* red_channelmodel.py: Begin porting this over to be a
	RedListModel and ServerListener.  Still need to thrash the model,
	add filtering and proper sorting, and probably optimize for the
	local subscription changed case.

	* red_serverlistener.py: Fix a bug where channel seqno listeners
	were being signaled for a change in the subscription seqno.

	* red_subscriptions.py: Removed some code which didn't appear to
	have any purpose and was causing tracebacks.


2003-01-23  Jon Trowbridge  <trow@ximian.com>

	* red_packagebrowser.py (PackageBrowser.show_popup_cb): Use the
	extra time and button number arguments when popping up the menu.

	* red_packageview.py (PackageView.button_clicked_for_popup_cb):
	Propagate the event button number and time through the chain of
	callbacks and idle functions, since the GdkEvent itself seems to
	get mangled by the time we actually need this info to pop up our
	menu.  This fixes the weird problem (due to a bad event time)
	where the pop-up menu would disappear unless button 3 was held
	down
	(PackageView.do_popup): Support the extra arguments discussed
	above.
	

	* Makefile.am (red_carpetsupport_DATA): Updated the list of files
	so that we can make distcheck.

